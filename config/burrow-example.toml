[general]
# 放置pid的檔案
pidfile="burrow.pid"
stdout-logfile="burrow.out"
access-control-allow-origin="mysite.example.com"

[logging]
# log檔案位置
filename="logs/burrow.log"
# log輸出最低等級
level="info"
# 每個log檔案最大容量(mb)
maxsize=100
# 每個log檔案最多儲存多少個備份
maxbackups=30
# 每個log檔案最多儲存多少天
maxage=10
# 時間是否使用當地時間
use-localtime=true
# 是否壓縮
use-compression=true

[zookeeper]
servers=[ "zkhost01.example.com:2181", "zkhost02.example.com:2181", "zkhost03.example.com:2181" ]
timeout=6
root-path="/burrow"

[client-profile.test]
# kafka client id，隨著request送至kafka broker做log用
client-id="burrow-test"
# 版本
kafka-version="0.10.0"

[cluster.local]
# 實作kafka cluster module name，目前只有這個，不能更改成其他名稱
class-name="kafka"
# kafka broker
servers=[ "kafka01.example.com:10251", "kafka02.example.com:10251", "kafka03.example.com:10251" ]
# sarama 相關配置，會以client-profile.test設置值做設置，test如果改成別的名稱client-profile.*也需要跟著改
client-profile="test"
topic-refresh=120
offset-refresh=30

[consumer.local]
# 實作kafka consumer client name，目前只有這個，不能更改成其他名稱
class-name="kafka"
cluster="local"
# kafka broker
servers=[ "kafka01.example.com:10251", "kafka02.example.com:10251", "kafka03.example.com:10251" ]
# sarama 相關配置，會以client-profile.test設置值做設置，test如果改成別的名稱client-profile.*也需要跟著改
client-profile="test"
group-blacklist="^(console-consumer-|python-kafka-consumer-|quick-).*$"
group-whitelist=""

[consumer.local_zk]
class-name="kafka_zk"
cluster="local"
servers=[ "zk01.example.com:2181", "zk02.example.com:2181", "zk03.example.com:2181" ]
zookeeper-path="/kafka-cluster"
zookeeper-timeout=30
group-blacklist="^(console-consumer-|python-kafka-consumer-|quick-).*$"
group-whitelist=""

[httpserver.default]
address=":8000"

[storage.default]
# 監控資料存放在名為"inmemory"module上，目前只有這個，不能更改成其他名稱
class-name="inmemory"
# 預先準備多少個request worker(goroutine)，用於http request or 內部採樣request
workers=20
# 每個 topic下的各個分區最多保存幾個offset資料
intervals=15
# offset接收到時已過期太久(秒)則丟棄
expire-group=604800
# 每個request worker chan buffer 大小，瞬間最大接受的request數量
min-distance=1

[notifier.default]
# 警報通知方式，有三種http email null
class-name="http"
url-open="http://someservice.example.com:1467/v1/event"
interval=60
timeout=5
keepalive=30
extras={ api_key="REDACTED", app="burrow", tier="STG", fabric="mydc" }
template-open="conf/default-http-post.tmpl"
template-close="conf/default-http-delete.tmpl"
method-close="DELETE"
send-close=true
threshold=1
